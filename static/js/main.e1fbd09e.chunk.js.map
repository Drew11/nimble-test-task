{"version":3,"sources":["components/tracker/icons/play_circle_outline-24px.svg","components/tracker/icons/stop_circle-24px.svg","components/tracker/tracker.js","store/actions/index.js","components/add/add.js","components/app/app.js","localStorage.js","store/store.js","store/reducers/root-reducer.js","index.js"],"names":["Tracker","props","tracker","dispatch","useDispatch","useEffect","active","minutes","id","type","payload","updateHour","seconds","updateMinute","setInterval","currentSecond","updateSecond","moment","unix","clearInterval","getTimeString","param","str","toString","length","backgroundStyleTracker","className","name","hours","src","iconStop","iconPlay","onClick","startingTime","startTracker","removeTracker","Add","trackers","useSelector","state","add","event","now","target","value","undefined","newTracker","created","code","onKeyDown","placeholder","App","trackersView","map","index","persistedState","serializedSate","localStorage","getItem","JSON","parse","e","loadState","store","createStore","action","filter","item","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1fbd09e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/play_circle_outline-24px.39fb5126.svg\";","export default __webpack_public_path__ + \"static/media/stop_circle-24px.12a98abf.svg\";","import {useEffect} from \"react\";\r\nimport { useDispatch} from 'react-redux';\r\nimport {\r\n    removeTracker,\r\n    stopTracker,\r\n    startTracker,\r\n    updateSecond,\r\n    updateMinute,\r\n    updateHour\r\n} from '../../store/actions/index';\r\n\r\nimport moment from 'moment';\r\nimport './tracker.css';\r\nimport iconPlay from './icons/play_circle_outline-24px.svg';\r\nimport iconStop from './icons/stop_circle-24px.svg';\r\n\r\nconst Tracker = (props) => {\r\n    const { tracker } = props;\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(()=>{\r\n        if(tracker.active){\r\n            if (tracker.minutes > 59) {\r\n               dispatch(updateHour(tracker.id))\r\n            }\r\n            if(tracker.seconds > 59){\r\n               dispatch(updateMinute(tracker.id))\r\n            }\r\n            const id = setInterval(() => {\r\n               dispatch(updateSecond(tracker.id, moment().unix()))\r\n            }, 1000);\r\n           return ()=> clearInterval(id);\r\n        }\r\n    }, [tracker.active, tracker.seconds, tracker.minutes]);\r\n\r\n\r\n\r\n    const getTimeString = (param)=>{\r\n        let str = param.toString();\r\n        if(str.length < 2) {\r\n            str = `0${str}`\r\n        }\r\n        return str\r\n    };\r\n\r\n    const backgroundStyleTracker = tracker.active? 'play': 'stop';\r\n\r\n\r\n    const getCallBack = ()=> {\r\n        if(tracker.active) {\r\n           dispatch(stopTracker(tracker.id))\r\n        } else {\r\n           dispatch(startTracker(tracker.id, moment().unix()))\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={`tracker ${backgroundStyleTracker}`}>\r\n            <div className=\"tracker-name\">\r\n                <span>\r\n                   {tracker.name?tracker.name: 'name'}\r\n                </span>\r\n            </div>\r\n\r\n            <div className=\"tracker-time\">\r\n                {`${getTimeString(tracker.hours)}: ${getTimeString(tracker.minutes)}:  ${getTimeString(tracker.seconds)}`}\r\n            </div>\r\n\r\n\r\n            <div className=\"tracker-controls-btn\">\r\n                <img src={tracker.active?iconStop:iconPlay}\r\n                    className={`tracker-controls-btn`}\r\n                    onClick={getCallBack}\r\n                >\r\n                </img>\r\n\r\n                <div\r\n                     className={`remove`}\r\n                     onClick={()=>{dispatch(removeTracker(tracker))}}\r\n                >\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default Tracker;","export function addTracker (tracker) {\r\n    return {\r\n        type: 'ADD_TRACKER',\r\n        payload: tracker\r\n    }\r\n}\r\n\r\nexport function removeTracker (tracker) {\r\n    return {\r\n        type: 'REMOVE_TRACKER',\r\n        payload: tracker\r\n    }\r\n}\r\n\r\nexport function stopTracker ( id ) {\r\n    return {\r\n        type: 'STOP_TRACKER',\r\n        payload: {\r\n            id\r\n        },\r\n    }\r\n}\r\n\r\nexport function startTracker ( id , startingTime ) {\r\n    return {\r\n        type: 'START_TRACKER',\r\n        payload: {\r\n            id,\r\n            startingTime\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateSecond (id, currentSecond) {\r\n    return {\r\n        type: 'UPDATE_SECOND',\r\n        payload: {\r\n            id,\r\n            currentSecond\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateMinute ( id ) {\r\n    return {\r\n        type: 'UPDATE_MINUTE',\r\n        payload: {\r\n            id\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateHour ( id ) {\r\n    return {\r\n        type: 'UPDATE_HOUR',\r\n        payload: {\r\n            id\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport moment from 'moment';\r\nimport { addTracker } from  '../../store/actions/index.js'\r\nimport './add.css';\r\n\r\nfunction Add() {\r\n\r\n    const dispatch = useDispatch();\r\n    const trackers = useSelector(state=>state);\r\n\r\n    const add = (event) => {\r\n        const now = moment().toString();\r\n        const name = event.target.value === '' || event.target.value === undefined ? now : event.target.value;\r\n\r\n        const newTracker = {\r\n            id: `${now}-${trackers.length}`,\r\n            name,\r\n            seconds: 0,\r\n            minutes: 0,\r\n            hours: 0,\r\n            startingTime: moment().unix(),\r\n            active: true,\r\n            created: moment().unix()\r\n        };\r\n\r\n\r\n        if(event.code === 'Enter' || event.type === 'click'){\r\n            dispatch(addTracker(newTracker));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"add-tracker\">\r\n\r\n            <input type=\"text\"\r\n                   className=\"add-tracker-input\"\r\n                   onKeyDown={add}\r\n                   placeholder=\"Enter tracker name\"\r\n            />\r\n\r\n            <div className=\"add-tracker-btn\"\r\n                 onClick={add}\r\n            >\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Add;\r\n","import './app.css';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Tracker from '../tracker/tracker';\nimport Add from '../add/add';\n\nfunction App() {\n\n  const trackers = useSelector(state=>state);\n  const trackersView = trackers.map((tracker, index)=>\n      <Tracker\n        key={index}\n        tracker={tracker}\n      />\n  );\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>tracker</h1>\n      </header>\n\n\n      <main>\n          <div className=\"content\">\n              <Add/>\n\n              <div className=\"tracker-list\">\n                  {trackersView}\n              </div>\n          </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import moment from 'moment';\r\n\r\nexport const loadState = () => {\r\n    try {\r\n        const serializedSate = localStorage.getItem('state');\r\n        if(serializedSate === null) {\r\n            return undefined\r\n        }\r\n\r\n        const state = JSON.parse(serializedSate);\r\n\r\n\r\n        return state\r\n\r\n    } catch (e) {\r\n        return undefined\r\n    }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n    try {\r\n        const serializedSate = JSON.stringify(state);\r\n        localStorage.setItem('state', serializedSate)\r\n\r\n    } catch (e) {\r\n        //\r\n    }\r\n};","import { createStore } from 'redux';\r\nimport reducer from './reducers/root-reducer';\r\nimport {loadState, saveState} from '../localStorage';\r\n\r\nconst persistedState = loadState();\r\n\r\nconst  getStateFromLocalStorage = () => {\r\n    if(persistedState) {\r\n        return persistedState\r\n    }\r\n    return [];\r\n};\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    getStateFromLocalStorage()\r\n);\r\n\r\nstore.subscribe(()=>{\r\n   saveState(store.getState())\r\n});\r\n\r\nexport default store;\r\n","\r\n        export default function reducer(state, action) {\r\n            switch (action.type) {\r\n                case 'ADD_TRACKER':\r\n                    return [...state, action.payload];\r\n\r\n                case 'REMOVE_TRACKER':\r\n                    return state.filter(item=>item.id!==action.payload.id);\r\n\r\n                case 'START_TRACKER':\r\n                    return state.map(item=>{\r\n                        if(item.id === action.payload.id) {\r\n                            return {...item,\r\n                                startingTime: action.payload.startingTime - item.seconds,\r\n                                active: true\r\n                            }\r\n                        }\r\n                        return item;\r\n                    });\r\n\r\n                case 'STOP_TRACKER':\r\n                    return state.map(item=>{\r\n                        if(item.id === action.payload.id) {\r\n                            return {...item,\r\n                                startingTime: 0,\r\n                                active: false\r\n                            }\r\n                        }\r\n                        return item;\r\n                    });\r\n\r\n                case 'UPDATE_SECOND':\r\n                    return state.map(item=>{\r\n                        if(item.id === action.payload.id) {\r\n                            return {...item,\r\n                                seconds: item.seconds + (action.payload.currentSecond - item.startingTime),\r\n                                startingTime: item.startingTime + (action.payload.currentSecond - item.startingTime)\r\n                            }\r\n                        }\r\n                        return item;\r\n                    });\r\n\r\n                case 'UPDATE_MINUTE':\r\n                    return state.map(item=>{\r\n                        if(item.id === action.payload.id) {\r\n                            return {...item,\r\n                                seconds: 0,\r\n                                minutes: item.minutes + 1,\r\n                            }\r\n                        }\r\n                        return item;\r\n                    });\r\n\r\n                case 'UPDATE_HOUR':\r\n                    return state.map(item=>{\r\n                        if(item.id === action.payload.id) {\r\n                            return {...item,\r\n                                minutes: 0,\r\n                                hours: item.hours + 1,\r\n                            }\r\n                        }\r\n                        return item;\r\n                    });\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from  'react-redux';\nimport App from './components/app/app';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}