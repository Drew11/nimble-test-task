{"version":3,"sources":["components/tracker/icons/play_circle_outline-24px.svg","components/tracker/icons/stop_circle-24px.svg","components/tracker/tracker.js","store/actions/index.js","components/add/add.js","components/app/app.js","localStorage.js","store/store.js","store/reducers/root-reducer.js","index.js"],"names":["Tracker","props","tracker","dispatch","useDispatch","useEffect","startingTime","moment","unix","active","minutes","id","type","payload","updateHour","seconds","updateMinute","setInterval","currentSecond","updateSecond","clearInterval","getTimeString","param","str","toString","length","backgroundStyleTracker","className","name","hours","src","iconStop","iconPlay","onClick","startTracker","removeTracker","Add","trackers","useSelector","state","add","event","now","target","value","undefined","newTracker","created","code","key","onKeyDown","placeholder","App","trackersView","map","index","persistedState","serializedSate","window","localStorage","getItem","JSON","parse","item","e","loadState","store","createStore","action","filter","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5603fcae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/play_circle_outline-24px.39fb5126.svg\";","export default __webpack_public_path__ + \"static/media/stop_circle-24px.12a98abf.svg\";","import React from 'react';\r\nimport {useEffect} from \"react\";\r\nimport { useDispatch} from 'react-redux';\r\nimport {\r\n    removeTracker,\r\n    stopTracker,\r\n    startTracker,\r\n    updateSecond,\r\n    updateMinute,\r\n    updateHour\r\n} from '../../store/actions/index';\r\n\r\nimport moment from 'moment';\r\nimport './tracker.css';\r\nimport iconPlay from './icons/play_circle_outline-24px.svg';\r\nimport iconStop from './icons/stop_circle-24px.svg';\r\n\r\nconst Tracker = (props) => {\r\n    const { tracker } = props;\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(()=>{\r\n        const startingTime = moment().unix();\r\n        if(tracker.active){\r\n            if (tracker.minutes > 59) {\r\n               dispatch(updateHour(tracker.id))\r\n            }\r\n            if(tracker.seconds > 59){\r\n               dispatch(updateMinute(tracker.id))\r\n            }\r\n            const id = setInterval(() => {\r\n               dispatch(updateSecond(tracker.id, moment().unix(), startingTime ))\r\n            }, 1000);\r\n           return ()=> clearInterval(id);\r\n        }\r\n    }, [tracker.active, tracker.seconds, tracker.minutes]);\r\n\r\n\r\n\r\n    const getTimeString = (param)=>{\r\n        let str = param.toString();\r\n        if(str.length < 2) {\r\n            str = `0${str}`\r\n        }\r\n        return str\r\n    };\r\n\r\n    const backgroundStyleTracker = tracker.active? 'play': 'stop';\r\n\r\n\r\n    const getCallBack = ()=> {\r\n        if(tracker.active) {\r\n           dispatch(stopTracker(tracker.id))\r\n        } else {\r\n           dispatch(startTracker(tracker.id, moment().unix()))\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={`tracker ${backgroundStyleTracker}`}>\r\n            <div className=\"tracker-name\">\r\n                <span>\r\n                   {tracker.name?tracker.name: 'name'}\r\n                </span>\r\n            </div>\r\n\r\n            <div className=\"tracker-time\">\r\n                {`${getTimeString(tracker.hours)}: ${getTimeString(tracker.minutes)}:  ${getTimeString(tracker.seconds)}`}\r\n            </div>\r\n\r\n\r\n            <div className=\"tracker-controls-btn\">\r\n                <img src={tracker.active?iconStop:iconPlay}\r\n                    className={`tracker-controls-btn`}\r\n                    onClick={getCallBack}\r\n                >\r\n                </img>\r\n\r\n                <div\r\n                     className={`remove`}\r\n                     onClick={()=>{dispatch(removeTracker(tracker))}}\r\n                >\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default Tracker;","export function addTracker (tracker) {\r\n    return {\r\n        type: 'ADD_TRACKER',\r\n        payload: tracker\r\n    }\r\n}\r\n\r\nexport function removeTracker (tracker) {\r\n    return {\r\n        type: 'REMOVE_TRACKER',\r\n        payload: tracker\r\n    }\r\n}\r\n\r\nexport function stopTracker ( id ) {\r\n    return {\r\n        type: 'STOP_TRACKER',\r\n        payload: {\r\n            id\r\n        },\r\n    }\r\n}\r\n\r\nexport function startTracker ( id , startingTime ) {\r\n    return {\r\n        type: 'START_TRACKER',\r\n        payload: {\r\n            id,\r\n            startingTime\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateSecond (id, currentSecond, startingTime) {\r\n    return {\r\n        type: 'UPDATE_SECOND',\r\n        payload: {\r\n            id,\r\n            currentSecond,\r\n            startingTime\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateMinute ( id ) {\r\n    return {\r\n        type: 'UPDATE_MINUTE',\r\n        payload: {\r\n            id\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateHour ( id ) {\r\n    return {\r\n        type: 'UPDATE_HOUR',\r\n        payload: {\r\n            id\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport moment from 'moment';\r\nimport { addTracker } from  '../../store/actions/index.js'\r\nimport './add.css';\r\n\r\nfunction Add() {\r\n\r\n    const dispatch = useDispatch();\r\n    const trackers = useSelector(state=>state);\r\n\r\n    const add = (event) => {\r\n        const now = moment().toString();\r\n        const name = event.target.value === '' || event.target.value === undefined ? now : event.target.value;\r\n\r\n        const newTracker = {\r\n            id: `${now}-${trackers.length}`,\r\n            name,\r\n            seconds: 0,\r\n            minutes: 0,\r\n            hours: 0,\r\n            startingTime: moment().unix(),\r\n            active: true,\r\n            created: moment().unix()\r\n        };\r\n\r\n\r\n        if( event.code === 'Enter' || event.key === 'Enter' || event.type === 'click'){\r\n            dispatch(addTracker(newTracker));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"add-tracker\">\r\n\r\n            <input type=\"text\"\r\n                   className=\"add-tracker-input\"\r\n                   onKeyDown={add}\r\n                   placeholder=\"Enter tracker name\"\r\n            />\r\n\r\n            <div className=\"add-tracker-btn\"\r\n                 onClick={add}\r\n            >\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Add;\r\n","import './app.css';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Tracker from '../tracker/tracker';\nimport Add from '../add/add';\n\nfunction App() {\n\n  const trackers = useSelector(state=>state);\n  const trackersView = trackers.map((tracker, index)=>\n      <Tracker\n        key={index}\n        tracker={tracker}\n      />\n  );\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>tracker</h1>\n      </header>\n\n\n      <main>\n          <div className=\"content\">\n              <Add/>\n\n              <div className=\"tracker-list\">\n                  {trackersView}\n              </div>\n          </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import moment from 'moment';\r\n\r\nexport const loadState = () => {\r\n    try {\r\n        const serializedSate = window.localStorage.getItem('state');\r\n        if(serializedSate === null) {\r\n            return undefined\r\n        }\r\n\r\n        const state = JSON.parse(serializedSate);\r\n\r\n        const updatedStateToCurrentTime = state.map(item=>{\r\n            if(item.active){\r\n                return {...item,\r\n                    seconds: item.seconds +  (moment().unix() - item.startingTime),\r\n                }\r\n            }\r\n            return item;\r\n        });\r\n\r\n        return updatedStateToCurrentTime\r\n\r\n    } catch (e) {\r\n        return undefined\r\n    }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n    try {\r\n        const serializedSate = JSON.stringify(state);\r\n        window.localStorage.setItem('state', serializedSate)\r\n\r\n    } catch (e) {\r\n        //\r\n    }\r\n};","import { createStore } from 'redux';\r\nimport reducer from './reducers/root-reducer';\r\nimport {loadState, saveState} from '../localStorage';\r\n\r\nconst persistedState = loadState();\r\n\r\nconst  getStateFromLocalStorage = () => {\r\n    if(persistedState) {\r\n        return persistedState\r\n    }\r\n    return [];\r\n};\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    getStateFromLocalStorage()\r\n);\r\n\r\nstore.subscribe(()=>{\r\n   saveState(store.getState())\r\n});\r\n\r\nexport default store;\r\n","\r\n        export default function reducer(state, action) {\r\n            switch (action.type) {\r\n                case 'ADD_TRACKER':\r\n                    return [...state, action.payload];\r\n\r\n                case 'REMOVE_TRACKER':\r\n                    return state.filter(item=>item.id!==action.payload.id);\r\n\r\n                case 'START_TRACKER':\r\n                    return state.map(item=>{\r\n                        if(item.id === action.payload.id) {\r\n                            return {...item,\r\n                                active: true\r\n                            }\r\n                        }\r\n                        return item;\r\n                    });\r\n\r\n                case 'STOP_TRACKER':\r\n                    return state.map(item=>{\r\n                        if(item.id === action.payload.id) {\r\n                            return {...item,\r\n                                active: false\r\n                            }\r\n                        }\r\n                        return item;\r\n                    });\r\n\r\n                case 'UPDATE_SECOND':\r\n                    return state.map(item=>{\r\n                        if(item.id === action.payload.id) {\r\n                            return {...item,\r\n                                seconds: item.seconds + (action.payload.currentSecond - action.payload.startingTime),\r\n                                startingTime: action.payload.startingTime\r\n                            }\r\n                        }\r\n                        return item;\r\n                    });\r\n\r\n                case 'UPDATE_MINUTE':\r\n                    return state.map(item=>{\r\n                        if(item.id === action.payload.id) {\r\n                            return {...item,\r\n                                seconds: 0,\r\n                                minutes: item.minutes + 1,\r\n                            }\r\n                        }\r\n                        return item;\r\n                    });\r\n\r\n                case 'UPDATE_HOUR':\r\n                    return state.map(item=>{\r\n                        if(item.id === action.payload.id) {\r\n                            return {...item,\r\n                                minutes: 0,\r\n                                hours: item.hours + 1,\r\n                            }\r\n                        }\r\n                        return item;\r\n                    });\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from  'react-redux';\nimport App from './components/app/app';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}